{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treep\\\\OneDrive\\\\Escritorio\\\\MP07\\\\UF01\\\\calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Display from './Display';\nimport Keypad from './Keypad';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para almacenar la entrada actual del usuario\n  const [input, setInput] = useState('');\n  const [color, setColor] = useState(''); // Color inicial\n\n  // Función que maneja los clics en los botones\n  const handleClick = value => {\n    if (value === 'C') {\n      // Reinicia la entrada si se presiona 'C' (Clear)\n      setInput('');\n    } else if (value === '=') {\n      try {\n        // Evalúa la expresión ingresada y actualiza la entrada con el resultado\n        setInput(eval(input).toString());\n      } catch (error) {\n        // Muestra 'Error' si la evaluación falla\n        setInput('Error');\n      }\n    } else {\n      // Agrega el valor del botón presionado a la entrada actual\n      setInput(input + value);\n    }\n  };\n\n  // Función para cambiar el color de fondo\n  const handleColorChange = () => {\n    setColors(prevColors => ({\n      backgroundColor: prevColors.backgroundColor === '#f0f0f0' ? '#d3d3d3' : '#f0f0f0',\n      buttonColor: prevColors.buttonColor === '#d0d0d0' ? '#aaaaaa' : '#d0d0d0'\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator\",\n    style: {\n      backgroundColor: color\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"color-toggle-button\",\n      onClick: handleColorChange,\n      children: \"Cambiar Color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Display, {\n      input: input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n      handleClick: handleClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"gVxQVWdFLhmboEGor8jes7MZcGA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Display","Keypad","jsxDEV","_jsxDEV","App","_s","input","setInput","color","setColor","handleClick","value","eval","toString","error","handleColorChange","setColors","prevColors","backgroundColor","buttonColor","className","style","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/treep/OneDrive/Escritorio/MP07/UF01/calculator/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Display from './Display';\nimport Keypad from './Keypad';\nimport './styles/App.css';\n\nfunction App() {\n  // Estado para almacenar la entrada actual del usuario\n  const [input, setInput] = useState('');\n  const [color, setColor] = useState(''); // Color inicial\n\n  // Función que maneja los clics en los botones\n  const handleClick = (value) => {\n    if (value === 'C') {\n      // Reinicia la entrada si se presiona 'C' (Clear)\n      setInput('');\n    } else if (value === '=') {\n      try {\n        // Evalúa la expresión ingresada y actualiza la entrada con el resultado\n        setInput(eval(input).toString());\n      } catch (error) {\n        // Muestra 'Error' si la evaluación falla\n        setInput('Error');\n      }\n    } else {\n      // Agrega el valor del botón presionado a la entrada actual\n      setInput(input + value);\n    }\n  };\n  \n  // Función para cambiar el color de fondo\n  const handleColorChange = () => {\n    setColors(prevColors => ({\n      backgroundColor: prevColors.backgroundColor === '#f0f0f0' ? '#d3d3d3' : '#f0f0f0',\n      buttonColor: prevColors.buttonColor === '#d0d0d0' ? '#aaaaaa' : '#d0d0d0',\n    }));\n  };\n\n  return (\n    <div className=\"calculator\" style={{ backgroundColor: color }}>\n    {/* Botón para cambiar el color */}\n    <button className=\"color-toggle-button\" onClick={handleColorChange}>\n      Cambiar Color\n    </button>\n      {/* Componente que muestra la entrada actual */}\n      <Display input={input} />\n      {/* Componente que contiene los botones de la calculadora */}\n      <Keypad handleClick={handleClick} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAExC;EACA,MAAMW,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIA,KAAK,KAAK,GAAG,EAAE;MACjB;MACAJ,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,MAAM,IAAII,KAAK,KAAK,GAAG,EAAE;MACxB,IAAI;QACF;QACAJ,QAAQ,CAACK,IAAI,CAACN,KAAK,CAAC,CAACO,QAAQ,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAP,QAAQ,CAAC,OAAO,CAAC;MACnB;IACF,CAAC,MAAM;MACL;MACAA,QAAQ,CAACD,KAAK,GAAGK,KAAK,CAAC;IACzB;EACF,CAAC;;EAED;EACA,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;IAC9BC,SAAS,CAACC,UAAU,KAAK;MACvBC,eAAe,EAAED,UAAU,CAACC,eAAe,KAAK,SAAS,GAAG,SAAS,GAAG,SAAS;MACjFC,WAAW,EAAEF,UAAU,CAACE,WAAW,KAAK,SAAS,GAAG,SAAS,GAAG;IAClE,CAAC,CAAC,CAAC;EACL,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,YAAY;IAACC,KAAK,EAAE;MAAEH,eAAe,EAAEV;IAAM,CAAE;IAAAc,QAAA,gBAE9DnB,OAAA;MAAQiB,SAAS,EAAC,qBAAqB;MAACG,OAAO,EAAER,iBAAkB;MAAAO,QAAA,EAAC;IAEpE;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAEPxB,OAAA,CAACH,OAAO;MAACM,KAAK,EAAEA;IAAM;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEzBxB,OAAA,CAACF,MAAM;MAACS,WAAW,EAAEA;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjC,CAAC;AAEV;AAACtB,EAAA,CA5CQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AA8CZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}