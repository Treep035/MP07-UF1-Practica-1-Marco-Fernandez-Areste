{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treep\\\\OneDrive\\\\Escritorio\\\\MP07\\\\UF01\\\\calculator\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\nimport React, { useState } from 'react';\nimport Display from './Display';\nimport Keypad from './Keypad';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // Estado para almacenar la entrada actual del usuario\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n\n  // Función que maneja los clics en los botones\n  const handleClick = value => {\n    if (value === 'C') {\n      // Reinicia la entrada si se presiona 'C' (Clear)\n      setInput('');\n    } else if (value === '=') {\n      try {\n        // Evalúa la expresión ingresada y actualiza la entrada con el resultado\n        setInput(eval(input).toString());\n      } catch (error) {\n        // Muestra 'Error' si la evaluación falla\n        setInput('Error');\n      }\n    } else {\n      // Agrega el valor del botón presionado a la entrada actual\n      setInput(input + value);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        input: input\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n        handleClick: handleClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `app ${isDarkMode ? 'dark' : 'light'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleDarkMode,\n        children: isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Display, {\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Keypad, {\n        isDarkMode: isDarkMode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"vYJNNV25FHwH0TTZOrX//UDd4kA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Display","Keypad","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isDarkMode","setIsDarkMode","toggleDarkMode","prevMode","handleClick","value","setInput","eval","input","toString","error","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/treep/OneDrive/Escritorio/MP07/UF01/calculator/src/App.js"],"sourcesContent":["// App.js\nimport React, { useState } from 'react';\nimport Display from './Display';\nimport Keypad from './Keypad';\nimport './styles/App.css';\n\nfunction App() {\n  // Estado para almacenar la entrada actual del usuario\n  const [isDarkMode, setIsDarkMode] = useState(false);\n\n  const toggleDarkMode = () => {\n    setIsDarkMode(prevMode => !prevMode);\n  };\n\n  // Función que maneja los clics en los botones\n  const handleClick = (value) => {\n    if (value === 'C') {\n      // Reinicia la entrada si se presiona 'C' (Clear)\n      setInput('');\n    } else if (value === '=') {\n      try {\n        // Evalúa la expresión ingresada y actualiza la entrada con el resultado\n        setInput(eval(input).toString());\n      } catch (error) {\n        // Muestra 'Error' si la evaluación falla\n        setInput('Error');\n      }\n    } else {\n      // Agrega el valor del botón presionado a la entrada actual\n      setInput(input + value);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"calculator\">\n        {/* Componente que muestra la entrada actual */}\n        <Display input={input} />\n        {/* Componente que contiene los botones de la calculadora */}\n        <Keypad handleClick={handleClick} />\n      </div>\n      <div className={`app ${isDarkMode ? 'dark' : 'light'}`}>\n        <button onClick={toggleDarkMode}>\n          {isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n        </button>\n        <Display isDarkMode={isDarkMode} />\n        <Keypad isDarkMode={isDarkMode} />\n      </div>\n    </>\n  );\n  \n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEnD,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3BD,aAAa,CAACE,QAAQ,IAAI,CAACA,QAAQ,CAAC;EACtC,CAAC;;EAED;EACA,MAAMC,WAAW,GAAIC,KAAK,IAAK;IAC7B,IAAIA,KAAK,KAAK,GAAG,EAAE;MACjB;MACAC,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,MAAM,IAAID,KAAK,KAAK,GAAG,EAAE;MACxB,IAAI;QACF;QACAC,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACd;QACAJ,QAAQ,CAAC,OAAO,CAAC;MACnB;IACF,CAAC,MAAM;MACL;MACAA,QAAQ,CAACE,KAAK,GAAGH,KAAK,CAAC;IACzB;EACF,CAAC;EAED,oBACEV,OAAA,CAAAE,SAAA;IAAAc,QAAA,gBACEhB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBAEzBhB,OAAA,CAACH,OAAO;QAACgB,KAAK,EAAEA;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEzBrB,OAAA,CAACF,MAAM;QAACW,WAAW,EAAEA;MAAY;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACNrB,OAAA;MAAKiB,SAAS,EAAE,OAAOZ,UAAU,GAAG,MAAM,GAAG,OAAO,EAAG;MAAAW,QAAA,gBACrDhB,OAAA;QAAQsB,OAAO,EAAEf,cAAe;QAAAS,QAAA,EAC7BX,UAAU,GAAG,sBAAsB,GAAG;MAAqB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtD,CAAC,eACTrB,OAAA,CAACH,OAAO;QAACQ,UAAU,EAAEA;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnCrB,OAAA,CAACF,MAAM;QAACO,UAAU,EAAEA;MAAW;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA,eACN,CAAC;AAGP;AAACjB,EAAA,CA7CQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AA+CZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}